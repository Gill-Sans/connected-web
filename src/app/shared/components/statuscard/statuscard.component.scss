// 1. Import the Sass map module to use module-prefixed functions
@use 'sass:map';

// Define a map for all status colors
$status-colors: (
    'pending': (
        color: #b48b4e,
    ),
    'approved': (
        color: #4caf50,
    ),
    'rejected': (
        color: #d9534f,
    ),
    'published': (
        color: #2196f3,
    ),
    'needs_revision': (
        color: #ff9800,
    ),
    'revised': (
        color: #9c27b0,
    ),
);

/* ------------------------------------------------------------------- */
/* --- Base Styles --- */
/* ------------------------------------------------------------------- */

/* Large Variant Styles */
.status-button {
    display: inline-block;
    padding: 6px 16px;
    font-size: 14px;
    font-weight: 500;
    border-radius: 10px;
    text-align: center;
    cursor: default;
    user-select: none;
    border: 2px solid;
    background: transparent;
    min-width: 100px;
    transition: background-color 0.2s ease, color 0.2s ease, box-shadow 0.2s ease, border-color 0.2s ease;

    &.clickable {
        cursor: pointer;

        &:focus-visible {
            outline: 3px solid rgba(33, 150, 243, 0.35);
            outline-offset: 2px;
        }
    }
}

/* Small Variant Styles */
.status-small {
    display: flex;
    align-items: center;
    gap: 8px;
    font-size: 14px;
    font-weight: 500;
    line-height: 1;

    &.clickable {
        cursor: pointer;
        border: 2px solid transparent;
        border-radius: 8px;
        padding: 4px 10px;
        transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease;
    }
}

.status-ball {
    display: block;
    width: 10px;
    height: 10px;
    border-radius: 50%;
    border: none !important;
    color: transparent !important;
}

/* ------------------------------------------------------------------- */
/* --- Color Generation with Sass Loop --- */
/* ------------------------------------------------------------------- */

@each $status, $props in $status-colors {
    // 2. Updated from map-get($props, 'color') to map.get($props, 'color')
    $color: map.get($props, 'color');

    // Apply color to the class for both variants
    .#{$status} {
        // Large Variant: Text color and Border color
        border-color: $color;
        color: $color;

        // Small Variant: Ball background color
        .status-ball {
            background-color: $color;
        }

        &.clickable:not(.active):hover,
        &.clickable:not(.active):focus-visible {
            background-color: rgba($color, 0.1);
        }

        &.clickable.active {
            background-color: $color;
            color: #fff;
            box-shadow:
                inset 0 0 0 2px rgba($color, 0.25),
                0 2px 18px rgba($color, 0.3);
        }

        &.clickable.active:focus-visible {
            outline: 3px solid rgba($color, 0.4);
            outline-offset: 2px;
        }

        &.status-small {
            border-color: $color;

            &.clickable.active {
                background-color: rgba($color, 0.12);
                color: $color;
                box-shadow: none;
            }
        }
    }
}
